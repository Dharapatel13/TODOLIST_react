{"version":3,"sources":["logo.svg","servies/constants/constant.js","servies/actions/action.js","components/list.js","components/todo.js","servies/reducers/reducer.js","containers/todoContainer.js","App.js","servies/reducers/index.js","store/store.js","index.js"],"names":["ADD_TO_LIST","DELETE_TO_LIST","Reset_Todo","CHECK_TO_LIST","Edit_TO_LIST","i","connect","state","todolist","todos","data","props","useState","text","editinpt","a","Swal","fire","title","input","inputValue","value","icon","backdrop","dispatch","id","console","log","type","className","style","textDecoration","cmpt","backgroundColor","fontSize","boxShadow","Button","onClick","e","swal","buttons","dangerMode","then","willDelete","todoValue","SetTodoValue","error","setError","Valid","placeholder","onChange","target","name","onKeyPress","key","AddToListHandler","variant","color","length","map","todo","index","completed","src","initialState","AddToList","TODO","App","combineReducers","action","filter","findIndex","persistConfig","storage","persistedReducer","persistReducer","rootReducer","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","logger","persistor","persistStore","storedTodo","loading","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8e9fc9d6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const ADD_TO_LIST=\"ADD_TO_LIST\"\r\nexport const DELETE_TO_LIST=\"DELETE_TO_LIST\"\r\nexport const Reset_Todo=\"Reset_Todo\"\r\nexport const CHECK_TO_LIST=\"CHECK_TO_LIST\"\r\nexport const Edit_TO_LIST=\"Edit_TO_LIST\"","\r\nimport {ADD_TO_LIST} from \"../constants/constant\"\r\nimport {DELETE_TO_LIST,Reset_Todo,CHECK_TO_LIST,Edit_TO_LIST} from '../constants/constant'\r\nlet i=0;\r\nexport const AddToList=(data)=>{\r\n    console.log(data);\r\nreturn{\r\n    \r\n    type:ADD_TO_LIST,\r\n    data:data,\r\n    id:i++,\r\n    completed: false\r\n}\r\n}\r\nexport const DeleteToList=(id)=>{\r\n    console.log(id)\r\nreturn{\r\n    \r\n    type:DELETE_TO_LIST,\r\n    id:id,\r\n}\r\n}\r\nexport const ResetTOList=()=>{\r\n\r\nreturn{\r\n    \r\n    type:Reset_Todo,\r\n    \r\n   \r\n}\r\n}\r\nexport const checkTOList=(id)=>{\r\n\r\n    return{\r\n        type:CHECK_TO_LIST,\r\n        \r\n        id\r\n      \r\n        \r\n       \r\n    }\r\n    }\r\n    export const EditTOList=(data,id)=>{\r\nconsole.log(data)\r\n        return{\r\n            \r\n            type:Edit_TO_LIST,\r\n            data,\r\n            id\r\n\r\n        }\r\n        }","import '../App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport Button from '@material-ui/core/Button';\r\nimport swal from \"sweetalert\";  \r\nimport Swal from \"sweetalert2\"; \r\nimport {checkTOList, DeleteToList,EditTOList} from '../servies/actions/action'\r\n import { connect } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport { Save } from '@material-ui/icons';\r\n\r\n\r\nfunction List(props) {\r\n  const [todo,setTodo]=useState(props.text)\r\n  const [edit,setedit]=useState(false)\r\n    const DtlClcik=()=>{\r\n      swal({\r\n        title: \"Are you sure?\",\r\n        text: \"Once deleted, you will not be able to recover this item!\",\r\n        icon: \"warning\",\r\n        buttons: true,\r\n        dangerMode: true,\r\n      })\r\n      .then((willDelete) => {\r\n        if (willDelete) {\r\n          props.dispatch(DeleteToList(props.id))\r\n          swal(\"Deleted successfully!\", {\r\n            icon: \"success\",\r\n          });\r\n        }\r\n        //  else {\r\n        //   swal(\"Your \");\r\n        // }\r\n      });\r\n  \r\n     \r\n    }\r\n    const editinpt = async () => {\r\n      const { value: text } = await Swal.fire({\r\n        title: 'Update Your TodoItem ',\r\n        input: 'text',\r\n       inputValue:props.text,\r\n      \r\n       \r\n      \r\n      })\r\n    \r\n      if (text) {\r\n\r\n        Swal.fire({\r\n          title: \"yeah!!!\",\r\n          text: \"successfully Update Todo\",\r\n          icon: \"success\",\r\n          \r\n          backdrop: `\r\n         rgba(0,0,123,0.4)\r\n         url(\"http://pa1.narvii.com/7206/7ae3453ffbdcc53495a7d046d625f949241e6bedr1-370-300_00.gif\")\r\n         left top\r\n         no-repeat\r\n       `\r\n        })\r\n        props.dispatch(EditTOList(text,props.id))\r\n      }\r\n    \r\n  }\r\n        // props.dispatch(EditTOList(text,props.id))\r\n   \r\n  return (\r\n   <>\r\n\r\n   <li className=\" pl-3 p-2 m-3  item\" style={{ textDecoration: props.cmpt ? \"line-through\" : \"none\", backgroundColor:  '#00000013',\r\n fontSize: '1.5em',\r\n boxShadow: '10px 10px grey'}}>\r\n \r\n <div className=\"row justify-content-center p-0 \" > \r\n     <div className=\"col col-md pl-xs-3 \">\r\n      \r\n       <span className=\"text-break\"> {props.text} </span>\r\n    \r\n     </div>\r\n     <div className=\"col-auto p-0\">\r\n     <Button onClick={(e)=>{console.log(props.cmpt)\r\n       props.dispatch(checkTOList(props.id))} }  >\r\n        <CheckIcon className=\"text-success\"/>\r\n          </Button>\r\n     </div>\r\n     <div className=\"col-auto \">\r\n     <Button  onClick={editinpt }   >\r\n        <Edit className=\"text-primary\"/>\r\n          </Button>\r\n          \r\n     </div>\r\n     <div className=\"col-auto \">\r\n     <Button  onClick={DtlClcik}>\r\n        <DeleteIcon className=\"text-danger\"/>\r\n          </Button>\r\n     </div>\r\n     \r\n    \r\n</div>\r\n\r\n</li>\r\n  \r\n  \r\n   </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps=state=>({\r\n  todolist:state.todos.data\r\n})\r\n\r\n\r\n\r\nexport default connect(mapStateToProps) (List);","import { useState} from 'react';\r\nimport '../App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport {connect} from 'react-redux'\r\nimport ListItem from \"./list\";\r\nimport swal from \"sweetalert\";  \r\nimport {ResetTOList} from '../servies/actions/action'\r\n\r\nfunction TODO(props) {\r\n    const [todoValue,SetTodoValue]=useState('');\r\n    const [error,setError]=useState('');\r\n\r\nconsole.log(props.todos);\r\n    const TodoItem=(e)=>\r\n    {\r\n        SetTodoValue(e.target.value)\r\n    }\r\n    \r\n   const Valid=()=>{\r\n     if(todoValue===(\"\")){\r\n       setError(\"enter some todo item in list\");\r\n\r\n     }\r\n\r\n   }\r\n\r\n  const keyPress=(e)=>{\r\n\r\n      if(e.key===\"Enter\")\r\n      {\r\n        setError(\"\");\r\n        if(todoValue === (\"\"))\r\n        {\r\n          Valid();\r\n        \r\n        }\r\n     \r\n       else {\r\n        props.AddToListHandler(todoValue);\r\n        SetTodoValue('');\r\n            \r\n        }\r\n       \r\n     \r\n      }\r\n  }\r\n\r\n  const AddClick=(e)=>{\r\n      setError(\"\");\r\n      if(todoValue === (\"\"))\r\n      {\r\n        Valid();\r\n      \r\n      }\r\n     else {\r\n          props.AddToListHandler(todoValue)\r\n          SetTodoValue(\"\");\r\n          \r\n      }\r\n}\r\n\r\n  const allClrClcik=()=>{\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"Once Reset, you will not be able to recover this item!\",\r\n      icon: \"warning\",\r\n      buttons: true,\r\n      dangerMode: true,\r\n    })\r\n    .then((willDelete) => {\r\n      if (willDelete) {\r\n        props.dispatch(ResetTOList())\r\n        swal(\"Reset successfully!\", {\r\n          icon: \"success\",\r\n        });\r\n      }\r\n      //  else {\r\n      //   swal(\"Your \");\r\n      // }\r\n    });\r\n  }\r\n   \r\n  return (\r\n   <>\r\n<div className=\"m-md-5 m-1 todoItems\">\r\n   <div className=\"row justify-content-center\">\r\n        <div className=\"col-sm-8 pb-4\">\r\n        <input \r\n            type=\"text\" \r\n            placeholder=\"What you Want to Do....!\" \r\n            className=\"form-control \"\r\n            onChange={TodoItem} name='userInpt' \r\n            value={todoValue} \r\n            onKeyPress={keyPress}\r\n           \r\n            >\r\n        </input>\r\n        <span className=\"text-danger \"><b>{error}</b></span>\r\n       </div>\r\n\r\n       <div className=\"col-sm-auto\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-auto\">\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\"h-100\"\r\n                            onClick={AddClick}  >\r\n                            ADD\r\n                        </Button>\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\"h-100\"\r\n                            onClick={allClrClcik}\r\n                        >\r\n                            Reset\r\n                        </Button>\r\n                     </div>\r\n                </div>\r\n       </div>\r\n\r\n       \r\n   </div>\r\n   \r\n   <div className=\"row  p-3\">\r\n            <div className=\"col p-0\">\r\n            {props.todos.length != 0  ? ( \r\n              <>\r\n         \r\n            <ul className=\"list-inline  \">\r\n                  {props.todos.map((todo,index)=>(\r\n                  <ListItem \r\n                  text={todo.data}  \r\n                  key={index} \r\n                  id={todo.id} \r\n                  cmpt={todo.completed}\r\n               \r\n                  />\r\n                  ))} \r\n            </ul>\r\n            </>\r\n           ):(\r\n             <div className=\"row justify-content-center\">\r\n               <div className=\"col  text-center\">\r\n               <h2 className=\"text-dark\"><b>ADD Somthing in TodoList</b></h2>\r\n           <img src=\"https://images.squarespace-cdn.com/content/v1/5bff12f036099b60838b10f7/1561757621406-SVJ2YX8DXFBLXEO1RBBS/ke17ZwdGBToddI8pDm48kMtiXMEMZ8ID8MVhA-T_Qc9Zw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PITnpAyX_dGZoSaTWLsWN0zAj5xdGjLNRKp-vUPPLOxh8/book_scene1.gif?format=500w\" className=\"img-fluid\"/>\r\n           \r\n  </div>\r\n   </div>\r\n           )}\r\n            </div>\r\n            \r\n    </div>\r\n \r\n</div>\r\n   \r\n   </>\r\n  );\r\n}\r\nconst mapStateToProps=state=>({\r\n    todos:state.todos.data\r\n})\r\n\r\nexport default connect(mapStateToProps)(TODO);","import { ADD_TO_LIST, Reset_Todo } from \"../constants/constant\";\r\nimport { DELETE_TO_LIST } from \"../constants/constant\";\r\nimport { CHECK_TO_LIST,Edit_TO_LIST } from \"../constants/constant\";\r\n// import localForage from 'localforage';\r\n\r\n\r\nconst initialState={\r\n    data:[]\r\n}\r\nexport default function TodoItem(state=initialState,action){\r\n    switch (action.type) {\r\n        case ADD_TO_LIST:\r\n            console.log(state)\r\n            return{data:[...state.data,{\r\n                    data: action.data,\r\n                    id: action.id,\r\n                    // inpt:false,\r\n                    completed:false\r\n                  }\r\n                ]\r\n              \r\n               \r\n            }\r\n    \r\n        case DELETE_TO_LIST:\r\n              const todos = state.data.filter((todo) => todo.id !== action.id)\r\n            return {\r\n              ...state,\r\n              data: todos,\r\n            }\r\n            case CHECK_TO_LIST:\r\n              let  index = state.data.findIndex((todo) => todo.id === action.id);\r\n              state.data[index].completed = !state.data[index].completed;\r\n              return {\r\n                data: [...state.data]\r\n              }\r\n\r\n\r\n              case Edit_TO_LIST:\r\n                let  i = state.data.findIndex((todo) => todo.id === action.id);\r\n              state.data[i].data = action.data;\r\n              return {\r\n                data: [...state.data]\r\n              }\r\n\r\n    \r\n            \r\n      case Reset_Todo:\r\n        \r\n            return initialState\r\n      \r\n              \r\n               \r\n    \r\n        default:\r\n            return state\r\n            break;\r\n    }\r\n}\r\n","import {connect} from 'react-redux'\r\nimport TODO from '../components/todo';\r\nimport {AddToList,DeleteToList} from '../servies/actions/action'\r\nimport TodoItem from '../servies/reducers/reducer';\r\n\r\n\r\nconst mapStateToProps=state=>({\r\n    todos:state.todos.data\r\n})\r\nconst mapDispatchToProps=dispatch=>({\r\n    AddToListHandler:data=> dispatch(AddToList(data)),\r\n    // deleteList: index =>dispatch(DeleteToList(index))\r\n\r\n})\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(TODO);","import logo from './logo.svg';\r\nimport './App.css';\r\nimport TODO from './containers/todoContainer'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction App() {\r\n  return (\r\n   <>\r\n   <div className=\"container-fluid \">\r\n<p className=\"h2 text-center p-3 mt-4 text-info\">TODO MANAGER</p>\r\n   <TODO/>\r\n\r\n   </div>\r\n   </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {combineReducers } from 'redux'\r\nimport todos from \"./reducer\";\r\n\r\nexport default combineReducers ({todos}); \r\n","import { createStore } from 'redux'\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage' \r\nimport App from '../App';\r\nimport {applyMiddleware,compose} from 'redux'\r\nimport {Provider} from 'react-redux'\r\nimport logger from 'redux-logger';\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\nimport rootReducer from '../servies/reducers/index';\r\n \r\n\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n  }\r\n  const persistedReducer = persistReducer(persistConfig, rootReducer)\r\n  \r\n  const composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n  let  store=createStore(persistedReducer,composeEnhancer(applyMiddleware(logger)));\r\n  let persistor = persistStore(store)\r\n  \r\n  \r\n \r\n \r\n\r\n\r\n \r\nconst storedTodo= () => { \r\n \r\n  return (\r\n      <>\r\n            <Provider store={store} >\r\n            <PersistGate loading={null} persistor={persistor}>\r\n            <App />\r\n            </PersistGate>  \r\n        </Provider >\r\n  </>\r\n   )\r\n}\r\nexport default storedTodo;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport StoredTodo from './store/store'\n\n\n\n\n\nReactDOM.render(\n  <StoredTodo/>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}